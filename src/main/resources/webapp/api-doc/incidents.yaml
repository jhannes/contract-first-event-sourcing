openapi: 3.0.3
info:
  title: My service
  description: My service
  version: 1.0.0
paths:
  /ws/messages:
    get:
      responses:
        200:
          description: Returns messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageFromServer"
components:
  schemas:
    MessageToServer:
      oneOf:
        - $ref: "#/components/schemas/IncidentSubscribeRequest"
        - $ref: "#/components/schemas/IncidentCommand"
      discriminator:
        propertyName: type
    MessageFromServer:
      oneOf:
        - $ref: "#/components/schemas/IncidentEvent"
        - $ref: "#/components/schemas/IncidentSummaryList"
        - $ref: "#/components/schemas/IncidentSnapshot"

    IncidentSubscribeRequest:
      properties:
        incidentId: { type: string, format: uuid }
      required: [incidentId]

    IncidentCommand:
      properties:
        incidentId:
          type: string
          format: uuid
        eventTime:
          type: string
          format: date-time
        delta:
          $ref: "#/components/schemas/IncidentDelta"
      required: [incidentId, eventTime, delta]

    IncidentEvent:
      allOf:
        - $ref: "#/components/schemas/IncidentCommand"
        - properties:
            timestamp:
              type: integer
              format: int64
            username:
              type: string
          required: [timestamp]

    IncidentDelta:
      oneOf:
        - $ref: "#/components/schemas/CreateIncidentDelta"
        - $ref: "#/components/schemas/UpdateIncidentDelta"
        - $ref: "#/components/schemas/AddPersonToIncidentDelta"
      discriminator:
        propertyName: delta

    CreateIncidentDelta:
      properties: { info: { $ref: "#/components/schemas/IncidentInfo" } }
      required: [info]
    UpdateIncidentDelta:
      properties: { info: { $ref: "#/components/schemas/IncidentInfo" } }
      required: [info]
    AddPersonToIncidentDelta:
      properties:
        personId:
          type: string
          format: uuid
        info:
          $ref: "#/components/schemas/PersonInfo"
      required: [personId, info]

    IncidentSummaryList:
      properties:
        incidents:
          type: array
          items:
            $ref: "#/components/schemas/IncidentSummary"
      required: [incidents]

    IncidentSummary:
      properties:
        incidentId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        info:
          $ref: "#/components/schemas/IncidentInfo"
      required: [incidentId, createdAt, updatedAt, info]

    IncidentSnapshot:
      allOf:
        - $ref: "#/components/schemas/IncidentSummary"
        - properties:
            persons:
              additionalProperties:
                $ref: "#/components/schemas/PersonInfo"
          required: [persons]

    IncidentInfo:
      properties:
        title:
          type: string
        priority:
          enum: [LOW, MEDIUM, HIGH]

    PersonInfo:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        role:
          enum: [CALLER, WITNESS, SUSPECT]
