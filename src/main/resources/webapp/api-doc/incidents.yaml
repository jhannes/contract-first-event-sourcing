openapi: 3.1.0
info:
  title: My service
  description: My service
  version: 1.0.0
paths:
  /ws/messages:
    get:
      responses:
        200:
          description: Returns messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageFromServer"
components:
  schemas:
    MessageToServer:
      oneOf:
        - $ref: "#/components/schemas/IncidentCommand"
    MessageFromServer:
      oneOf:
        - $ref: "#/components/schemas/IncidentsSummaryList"
        - $ref: "#/components/schemas/IncidentEvent"

    IncidentCommand:
      properties:
        incidentId:
          type: string
          format: uuid
        eventTime:
          type: string
          format: date-time
        delta:
          $ref: "#/components/schemas/IncidentDelta"
      required: [incidentId, eventTime, delta]

    IncidentEvent:
      allOf:
        - $ref: "#/components/schemas/IncidentCommand"
        - properties:
            username:
              type: string
            timestamp:
              type: integer
              format: int64

    MessageSummary:
      properties:
        messageText:
          type: string

    IncidentsSummaryList:
      properties:
        lastTimestamp:
          type: integer
          format: int32
        replaceList:
          type: boolean
          default: false
        incidents:
          type: array
          items:
            $ref: "#/components/schemas/IncidentSummary"
      required: [incidents]

    IncidentSummary:
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        incidentId:
          type: string
          format: uuid
        info:
          $ref: "#/components/schemas/IncidentInfo"
      required: [createdAt, updatedAt, incidentId, info]

    IncidentInfo:
      properties:
        title:
          type: string
        priority:
          enum: [HIGH, MEDIUM, LOW]

    InvolvedPersonInfo:
      properties:
        role:
          enum: [SUSPECT, CALLER, WITNESS]
        firstName:
          type: string
        lastName:
          type: string
      required: [role]

    IncidentDelta:
      oneOf:
        - $ref: "#/components/schemas/CreateIncidentDelta"
        - $ref: "#/components/schemas/UpdateIncidentDelta"
        - $ref: "#/components/schemas/AddInvolvedPersonToIncident"
      discriminator:
        propertyName: delta

    CreateIncidentDelta:
      properties:
        info: { $ref: "#/components/schemas/IncidentInfo" }
      required: [info]
    UpdateIncidentDelta:
      properties:
        info: { $ref: "#/components/schemas/IncidentInfo" }
      required: [info]
    AddInvolvedPersonToIncident:
      properties:
        personId:
          type: string
          format: uuid
        info: { $ref: "#/components/schemas/InvolvedPersonInfo" }
      required: [personId, info]
